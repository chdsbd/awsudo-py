version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.5

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "poetry.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            echo 'export PATH="$PATH":"$HOME"/.local/bin' >> $BASH_ENV
            # Use our new PATH so we can call poetry from bash
            source $BASH_ENV
            python3 -m pip install --user poetry===0.12.10
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "poetry.lock" }}
        
      - run:
          name: run tests
          command: make test
  lint:
    docker:
      - image: circleci/python:3.6.5

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "poetry.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            echo 'export PATH="$PATH":"$HOME"/.local/bin' >> $BASH_ENV
            # Use our new PATH so we can call poetry from bash
            source $BASH_ENV
            python3 -m pip install --user poetry===0.12.10
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "poetry.lock" }}
        
      - run:
          name: run lints
          command: make lint


workflows:
  version: 2
  test:
    jobs:
      - test
      - lint
